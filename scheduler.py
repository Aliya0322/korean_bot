import json
import random
import sqlite3
from aiogram import Dispatcher, Bot
from aiogram.types import FSInputFile
from aiogram.client.default import DefaultBotProperties
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from configuration import BOT_TOKEN


bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode='HTML'))
dp = Dispatcher()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def get_db_connection():
    return sqlite3.connect("korean_bot.db")

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –∏–∑ JSON-—Ñ–∞–π–ª–∞
def load_words():
    with open("words.json", "r", encoding="utf-8") as f:
        return json.load(f)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª–æ–≤–∞ –¥–Ω—è
async def send_word():
    words = load_words()
    word_data = random.choice(words)
    word, translation, image_path, example = (
        word_data["word"],
        word_data["translation"],
        word_data["image"],
        word_data.get("example", "–ü—Ä–∏–º–µ—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."),
    )

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT user_id FROM users")
        users = cursor.fetchall()
        conn.close()
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å–æ —Å–ª–æ–≤–æ–º –¥–Ω—è –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    for user in users:
        user_id = user[0]
        try:
            photo = FSInputFile(image_path)
            caption = (
                f"üìñ <b>–°–ª–æ–≤–æ –¥–Ω—è:</b> {word}\n"
                f"üîπ <b>–ü–µ—Ä–µ–≤–æ–¥:</b> {translation}\n"
                f"‚úèÔ∏è <b>–ü—Ä–∏–º–µ—Ä:</b> {example}"
            )
            await bot.send_photo(chat_id=user_id, photo=photo, caption=caption, parse_mode="HTML")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

def schedule_daily_word(hour=9, minute=0):
    scheduler = AsyncIOScheduler()
    trigger = CronTrigger(hour=hour, minute=minute, second=0)
    scheduler.add_job(send_word, trigger)
    scheduler.start()

